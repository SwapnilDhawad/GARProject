---
name: Build and Push Python Image to Google Cloud Platform
on:
  push:
    branches: [ main ]
jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: assignment-gcr
      PROJECT_ID: gifted-honor-378815 
      #GKE_CLUSTER: assignment-1
      GKE_CLUSTER: primary
      #GKE_ZONE: us-central1-c
      GKE_ZONE: us-central1-a
      DEPLOYMENT_NAME: github-actions-gke
      REPOSITORY: assignment-gcr
      GAR_LOCATION: us-central1

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        project_id: ${{ env.PROJECT_ID }}
        export_default_credentials: true

    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:latest .

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./scripts/git_update.sh -v minor

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker us-west2-docker.pkg.dev --quiet

    - name: Push Docker Image to Container Registry (GCR)
      env:
        GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |-
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG

    - name: Push Docker Image to Artifact Registry
      env:
        GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |-
        docker tag $IMAGE_NAME:latest us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
        docker push us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
        docker push us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG

    #- name: Get GKE Credentials 
    #  run: |-
    #    gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
    
    - name: Setup Kustomize 
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    
    - name: Deploy image to GKE Cluster 
      run: |-
        # replacing the image name in the k8s template
        ./kustomize edit set image gcr.io/$PROJECT_ID/$IMAGE_NAME:TAG=gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide

        # replacing the image name in the k8s template
        # gcloud container clusters get-credentials assignment-1 --zone us-central1-c --project gifted-honor-378815
        #./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME:$GIT_TAG
        # ./kustomize build . | kubectl apply -f -
        #kubectl rollout status deployment/$DEPLOYMENT_NAME
        #kubectl get services -o wide